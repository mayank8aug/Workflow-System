{"version":3,"sources":["reducers/auth.js","reducers/workflowHeader.js","reducers/workflow.js","reducers/message.js","reducers/index.js","sagas/index.js","actions/index.js","Components/Header/Header.js","utils.js","Components/Auth/Login.js","Components/Workflow/Search.js","Components/Workflow/Filter.js","Components/Workflow/WorkflowsListHeader.js","Components/Workflow/WorkflowCard.js","Components/Workflow/WorklowList.js","Components/Workflow/Workflows.js","Components/Workflow/WorkflowActions.js","Components/Workflow/WorkflowHeader.js","Components/Workflow/WorkflowNode.js","Components/Workflow/NodesList.js","Components/Workflow/Workflow.js","Components/Messages/Growl.js","App.js","index.js","store.js"],"names":["initialState","isLoggedIn","email","auth","prevState","action","type","Object","assign","filterState","searchQuery","workflowHeader","query","workflows","updateStateErr","nodeRemoved","workflowRemoved","persistedWorkflows","workflow","concat","workflowAdded","splice","index","JSON","parse","stringify","canNotBeUpdated","nodes","some","node","state","persisted","updateType","saved","prevWorkflows","push","allWorkflows","allNodes","pop","allPrevWorkflows","allNodeList","workflowIndex","nodeIndex","incompleteNode","i","wf","data","currentNode","wfToShuffle","wfNodes","length","j","Math","floor","random","trim","toLowerCase","message","combineReducers","rootSaga","all","types","growlUpdate","clearWorkflowError","updateWorkflows","userLogout","dispatch","history","replace","Header","useHistory","useDispatch","logout","useCallback","bind","useSelector","className","onClick","isEmpty","value","undefined","noop","error","test","required","len","onSubmit","loginUser","validate","Login","props","submitHandler","render","handleSubmit","name","input","meta","placeholder","touched","handleInput","func","wait","timeout","args","context","this","later","apply","clearTimeout","setTimeout","debounce","setSearchQuery","Search","onKeyUp","ev","target","filterWorkflows","Filter","filterWorkflowsFn","onChange","createNewWorkflow","WorkflowsListHeader","createWorkflow","removeWorkflow","deleteWorkflow","workflowStateUpdate","updateWorkflowState","redirectToWorkflow","WorkflowCard","removeWorkflowFn","stopPropagation","updateWorkflowStateFn","editWorkflow","WorkflowList","map","key","updateGrowl","Workflows","updateGrowlFn","workflowState","useEffect","renderWorkflows","filter","indexOf","addNewNode","title","content","addNode","deleteLastNode","deleteNode","saveWorkflow","shuffleWfNodes","shuffleNodes","WorkflowActions","nodesCount","allowShuffle","addNodeFn","deleteNodeFn","saveWorkflowFn","shuffleWfNodesFn","updateWfName","updateWorkflow","WorkflowHeader","updateWfNameFn","defaultValue","onBlur","changeState","updateState","updateNodeData","el","dataset","textContent","updateNode","WorkflowNode","changeStateFn","updateNodeFn","data-key","contentEditable","NodesList","Workflow","match","Number","params","Growl","App","basename","process","exact","path","component","store","sagaMiddleware","createSagaMiddleware","middleware","enhancers","compose","applyMiddleware","createStore","reducers","run","mySaga","configureStore","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.53ed698a.chunk.js","sourcesContent":["const initialState = {\n    isLoggedIn: false,\n    email: null\n};\n\nfunction auth(prevState = initialState, action) {\n    switch(action.type) {\n        case 'LOGIN_USER':\n            return Object.assign({}, prevState, {\n                isLoggedIn: true,\n                email: action.email\n            });\n        case 'LOGOUT_USER':\n            return Object.assign({}, prevState, {\n                isLoggedIn: false,\n                email: null\n            });\n        default:\n            return prevState;\n    }\n}\n\nexport default auth;","const initialState = {\n    filterState: null,\n    searchQuery: null\n};\n\nfunction workflowHeader(prevState = initialState, action) {\n    switch(action.type) {\n        case 'SET_SEARCH_QUERY':\n            return Object.assign({}, prevState, {\n                searchQuery: action.query\n            });\n        case 'SET_FILTER':\n            return Object.assign({}, prevState, {\n                filterState: action.filterState\n            });\n        default:\n            return prevState;\n    }\n}\n\nexport default workflowHeader;","const initialState = {\n    workflows: [],\n    updateStateErr: false,\n    nodeRemoved: false,\n    workflowRemoved: false,\n    persistedWorkflows: [],\n    searchQuery: '',\n    filterState: ''\n};\n\nfunction workflow(prevState = initialState, action) {\n    switch(action.type) {\n        case 'ADD_WORKFLOW':\n            return Object.assign({}, prevState, {\n                persistedWorkflows: prevState.persistedWorkflows.concat(action.workflow),\n                updateStateErr: false,\n                workflowAdded: true\n            });\n        case 'DELETE_WORKFLOW':\n            prevState.persistedWorkflows.splice(action.index, 1);\n            return Object.assign({}, prevState, {\n                workflows: [...prevState.persistedWorkflows],\n                updateStateErr: false,\n                workflowRemoved: true\n            });\n        case 'UPDATE_WORKFLOW_STATE':\n            const workflows = JSON.parse(JSON.stringify(prevState.persistedWorkflows));\n            const workflow = workflows[action.index];\n            const canNotBeUpdated = workflow.nodes.some(node => node.state !== 'COMPLETED');\n            if (canNotBeUpdated) {\n                return Object.assign({}, prevState, {\n                    updateStateErr: true\n                });\n            } else {\n                workflow.state = workflow.state === 'PENDING' ? 'COMPLETED' : 'PENDING';\n                return Object.assign({}, prevState, {\n                    persistedWorkflows: workflows\n                });\n            }\n        case 'UPDATE_WORKFLOWS':\n            const persisted = JSON.parse(JSON.stringify(prevState.persistedWorkflows));\n            if (action.updateType === 'fromPersist') {\n                return Object.assign({}, prevState, {\n                    workflows: persisted,\n                    saved: false\n                });\n            } else {\n                return Object.assign({}, prevState, {\n                    persistedWorkflows: prevState.workflows,\n                    saved: true\n                });\n            }\n        case 'ADD_NODE':\n            const prevWorkflows = JSON.parse(JSON.stringify(prevState.workflows));\n            prevWorkflows[action.index].nodes.push(action.node);\n            return Object.assign({}, prevState, {\n                workflows: prevWorkflows,\n                updateStateErr: false\n            });\n        case 'DELETE_NODE':\n            const allWorkflows = JSON.parse(JSON.stringify(prevState.workflows));\n            const allNodes = allWorkflows[action.index].nodes;\n            allNodes.pop();\n            return Object.assign({}, prevState, {\n                nodeRemoved: true,\n                workflows: allWorkflows\n            });  \n        case 'UPDATE_NODE_STATE':\n            const allPrevWorkflows = JSON.parse(JSON.stringify(prevState.workflows));\n            const allNodeList = allPrevWorkflows[action.workflowIndex].nodes;\n            const node = allNodeList[action.nodeIndex];\n            let incompleteNode = false;\n            for (let i = 0; i < action.nodeIndex; i++) {\n                if (allNodeList[i].state !== 'COMPLETED') {\n                    incompleteNode = true;\n                    break;\n                }\n            }\n            if (incompleteNode && node.state === 'IN-PROGRESS') {\n                return Object.assign({}, prevState, {\n                    updateStateErr: true\n                });\n            } else {\n                node.state = node.state === 'PENDING' ? 'IN-PROGRESS' : 'COMPLETED';\n                return Object.assign({}, prevState, {\n                    workflows: allPrevWorkflows\n                });\n            }\n        case 'CLEAR_WORKFLOW_ERROR':\n            return Object.assign({}, prevState,  {\n                updateStateErr: false,\n                nodeRemoved: false,\n                workflowRemoved: false,\n                workflowAdded: false,\n                saved: false\n            });\n        case 'UPDATE_WORKFLOW':\n            const wf = prevState.workflows[action.index];\n            Object.assign(wf, action.data);\n            return Object.assign({}, prevState, {\n                workflows: prevState.workflows\n            });\n        case 'UPDATE_NODE':\n            const currentNode = prevState.workflows[action.workflowIndex].nodes[action.nodeIndex];\n            Object.assign(currentNode, action.data);\n            return Object.assign({}, prevState, {\n                workflows: prevState.workflows\n            });\n        case 'SHUFFLE_NODES':\n            const wfToShuffle = prevState.workflows[action.index];\n            const wfNodes = wfToShuffle.nodes;\n            for (let i = wfNodes.length - 1; i > 0; i--) {\n                const j = Math.floor(Math.random() * (i + 1));\n                [wfNodes[i], wfNodes[j]] = [wfNodes[j], wfNodes[i]];\n            }\n            return Object.assign({}, prevState, {\n                workflows: prevState.workflows\n            });\n        case 'SET_SEARCH_QUERY':\n            return Object.assign({}, prevState, {\n                searchQuery: action.query.trim().toLowerCase()\n            });\n        case 'SET_FILTER':\n            return Object.assign({}, prevState, {\n                filterState: action.filterState\n            });\n        default:\n            return prevState;\n    }\n}\n\nexport default workflow;","const initialState = {\n    data: null\n};\n\nfunction message(prevState = initialState, action) {\n    switch(action.type) {\n        case 'UPDATE_GROWL':\n            return Object.assign({}, prevState, {\n                data: action.data\n            });\n        default:\n            return prevState;\n    }\n}\n\nexport default message;","  \nimport { combineReducers } from 'redux';\nimport auth from './auth';\nimport workflowHeader from './workflowHeader';\nimport workflow from './workflow';\nimport message from './message';\n\nexport default combineReducers({\n    auth,\n    workflowHeader,\n    workflow,\n    message\n});","  \nimport { all } from 'redux-saga/effects';\n\nexport default function* rootSaga() {\n  yield all([\n  ]);\n}","export const types = {\n    LOGIN_USER: 'LOGIN_USER',\n    LOGOUT_USER: 'LOGOUT_USER',\n    SET_SEARCH_QUERY: 'SET_SEARCH_QUERY',\n    SET_FILTER: 'SET_FILTER',\n    ADD_WORKFLOW: 'ADD_WORKFLOW',\n    DELETE_WORKFLOW: 'DELETE_WORKFLOW',\n    ADD_NODE: 'ADD_NODE',\n    DELETE_NODE: 'DELETE_NODE',\n    UPDATE_NODE_STATE: 'UPDATE_NODE_STATE',\n    UPDATE_GROWL: 'UPDATE_GROWL',\n    CLEAR_WORKFLOW_ERROR: 'CLEAR_WORKFLOW_ERROR',\n    UPDATE_WORKFLOW_STATE: 'UPDATE_WORKFLOW_STATE',\n    UPDATE_WORKFLOWS: 'UPDATE_WORKFLOWS',\n    UPDATE_WORKFLOW: 'UPDATE_WORKFLOW',\n    UPDATE_NODE: 'UPDATE_NODE',\n    SHUFFLE_NODES: 'SHUFFLE_NODES'\n};\n\nexport function loginUser(email) {\n    return { type: types.LOGIN_USER, email };\n}\n\nexport function logoutUser() {\n    return { type: types.LOGOUT_USER };\n}\n\nexport function setSearchQuery(query) {\n    return { type: types.SET_SEARCH_QUERY, query };\n}\n\nexport function setFilter(filterState) {\n    return { type: types.SET_FILTER, filterState };\n}\n\nexport function addWorkflow() {\n    return { type: types.ADD_WORKFLOW, workflow: { name: 'New Workflow', state: 'PENDING', nodes: [] } };\n}\n\nexport function deleteWorkflow(index) {\n    return { type: types.DELETE_WORKFLOW, index };\n}\n\nexport function addNode(index) {\n    return { type: types.ADD_NODE, index, node: { title: 'New Task', content: 'Task Content', state: 'PENDING'} };\n}\n\nexport function deleteNode(index) {\n    return { type: types.DELETE_NODE, index };\n}\n\nexport function updateState(workflowIndex, nodeIndex) {\n    return { type: types.UPDATE_NODE_STATE, workflowIndex, nodeIndex };\n}\n\nexport function growlUpdate(data) {\n    return { type: types.UPDATE_GROWL, data };\n}\n\nexport function clearWorkflowError() {\n    return { type: types.CLEAR_WORKFLOW_ERROR };\n}\n\nexport function updateWorkflowState(index) {\n    return { type: types.UPDATE_WORKFLOW_STATE, index };\n}\n\nexport function updateWorkflows(updateType) {\n    return { type: types.UPDATE_WORKFLOWS, updateType };\n}\n\nexport function updateWorkflow(index, data) {\n    return { type: types.UPDATE_WORKFLOW, index, data };\n}\n\nexport function updateNode(workflowIndex, nodeIndex, data) {\n    return { type: types.UPDATE_NODE, workflowIndex, nodeIndex, data };\n}\n\nexport function shuffleNodes(index) {\n    return { type: types.SHUFFLE_NODES, index };\n}","import React, { useCallback } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logoutUser } from '../../actions/index';\nimport './Header.css'\n\nfunction userLogout(dispatch, history) {\n    dispatch(logoutUser());\n    history.replace('/');\n}\n\nfunction Header() {\n    const history = useHistory();;\n    const dispatch = useDispatch();\n    const logout = useCallback(userLogout.bind(null, dispatch, history));\n    const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n    return (\n        <div className=\"header\">\n            <div className=\"fs20 fw700 color-white\">FLOWAPP</div>\n            {isLoggedIn && <button className=\"logout-btn\" onClick={logout}>Logout</button>}\n        </div>\n    );\n}\n\nexport default Header;","const isEmpty = value => value === undefined || value === null || value === '';\n\nexport function debounce(func, wait) {\n    let timeout;\n    return function (...args) {\n        const context = this;\n        const later = function () {\n            timeout = null;\n            func.apply(context, args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n}\n\nexport function noop() {\n\n}\n\nexport function email(value) {\n    let error = null;\n    if ((!isEmpty(value) && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) || isEmpty(value)) {\n        error = 'Please enter a valid Email';\n    }\n    return error;\n}\n\nexport function required(value) {\n    const len = value ? value.trim().length : 0;\n    if (isEmpty(value) || len < 1) {\n        return 'This is required';\n    }\n}","import React, { useCallback } from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch } from 'react-redux';\nimport { loginUser } from '../../actions/index';\nimport { email, required } from '../../utils';\nimport './Login.css';\n\nfunction onSubmit(history, dispatch) {\n    dispatch(loginUser('mk@yopmail.com'));\n    history.replace('/workflows');\n}\n\nfunction validate() {\n\n}\n\nfunction Login(props) {\n    const { history } = props;\n    const dispatch = useDispatch();\n    const submitHandler = useCallback(onSubmit.bind(null, history, dispatch), []);\n    return (\n        <div className=\"login-container display-flex flex-column justify-space-center align-items-center\">\n            <div className=\"login\">\n                <div className=\"mr-b20 fw700 text-center\">Login</div>\n                <Form\n                    onSubmit={submitHandler}\n                    validate={validate}\n                    render={({ handleSubmit }) => (\n                        <form onSubmit={handleSubmit}>\n                            <Field name=\"email\" validate={email}>\n                                {({ input, meta }) => (\n                                    <div className=\"mr-b40 pos-rel\">\n                                        <input className=\"input-field outline-none\" type=\"email\" {...input} placeholder=\"*Email\" />\n                                        {meta.touched && meta.error && <span className=\"val-error pos-abs\">{meta.error}</span>}\n                                    </div>\n                                )}\n                            </Field>\n                            <Field name=\"password\" validate={required}>\n                                {({ input, meta }) => (\n                                    <div className=\"mr-b40 pos-rel\">\n                                        <input className=\"input-field outline-none\" type=\"password\" {...input} placeholder=\"*Password\" />\n                                        {meta.touched && meta.error && <span className=\"val-error pos-abs\">{meta.error}</span>}\n                                    </div>\n                                )}\n                            </Field>\n                            <label className=\"mr-b20 inline-block cursor-pointer\">\n                                <Field name=\"rememberLogin\">\n                                    {({ input, meta }) => (\n                                        <span>\n                                            <input className=\"cursor-pointer\" type=\"checkbox\" {...input} />\n                                            {meta.touched && meta.error && <span>{meta.error}</span>}\n                                        </span>\n                                    )}\n                                </Field>\n                                <span className=\"pd-l4 fs14 text-top\">Remember me</span>\n                            </label>\n                            <button className=\"w100 color-white cursor-pointer submit-btn outline-none\" type=\"submit\">Login</button>\n                        </form>\n                    )}\n                />\n                <div className=\"signup-text cursor-pointer\">Don't have an account? Sign up here</div>\n            </div>\n        </div >\n    );\n}\n\nexport default Login;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { FaSearch } from \"react-icons/fa\";\nimport { setSearchQuery } from '../../actions/index';\nimport { debounce } from '../../utils';\n\nfunction handleSearchQuery(query, dispatch) {\n    dispatch(setSearchQuery(query));\n}\n\nconst handleInput = debounce(handleSearchQuery, 200);\n\nfunction Search() {\n    const dispatch = useDispatch();\n    return (\n        <div className=\"workflow-search pos-rel\">\n            <FaSearch />\n            <input className=\"search\" type=\"text\" placeholder=\"Search Workflows\" onKeyUp={ev => handleInput(ev.target.value, dispatch)} />\n        </div>\n    );\n}\n\nexport default Search;","import React, { useCallback } from 'react';\nimport { FaFilter } from 'react-icons/fa';\nimport { setFilter } from '../../actions/index';\nimport { useDispatch } from 'react-redux';\n\nfunction filterWorkflows(dispatch, state) {\n    dispatch(setFilter(state));\n}\n\nfunction Filter() {\n    const dispatch = useDispatch();\n    const filterWorkflowsFn = useCallback(ev => filterWorkflows(dispatch, ev.target.value), [dispatch]);\n    return (\n        <div className=\"filters pos-rel\">\n            <FaFilter />\n            <select onChange={filterWorkflowsFn}>\n                <option value=\"\">ALL</option>\n                <option value=\"PENDING\">PENDING</option>\n                <option value=\"COMPLETED\">COMPLETED</option>\n            </select>\n        </div>\n    );\n}\n\nexport default Filter;","import React, { useCallback } from 'react';\nimport { addWorkflow } from '../../actions/index';\nimport { FaPlus } from \"react-icons/fa\";\nimport Search from './Search';\nimport { useDispatch } from 'react-redux';\nimport './WorkflowListHeader.css';\nimport Filter from './Filter';\n\nfunction createNewWorkflow(dispatch) {\n    dispatch(addWorkflow());\n}\n\nfunction WorkflowsListHeader() {\n    const dispatch = useDispatch();\n    const createWorkflow = useCallback(createNewWorkflow.bind(null, dispatch), []);\n    return (\n        <div className=\"list-header\">\n            <div className=\"search-filter\">\n                <Search />\n                <Filter />\n            </div>\n            <button className=\"add-workflow display-flex align-items-center\" onClick={createWorkflow}><FaPlus /><span className=\"pd-l4\">Create Workflow</span></button>\n        </div>\n    );\n}\n\nexport default WorkflowsListHeader;","import React, { useCallback } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { FaTrashAlt, FaCheckCircle } from \"react-icons/fa\";\nimport { deleteWorkflow, updateWorkflowState } from '../../actions/index';\nimport './WorkflowCard.css';\nimport { useDispatch } from 'react-redux';\n\nfunction removeWorkflow(dispatch, index) {\n    dispatch(deleteWorkflow(index));\n}\n\nfunction workflowStateUpdate(dispatch, index) {\n    dispatch(updateWorkflowState(index));\n}\n\nfunction redirectToWorkflow(history, index) {\n    history.push(`/workflows/${index}`);\n}\n\nfunction WorkflowCard(props) {\n    const { workflow: { name, state }, index } = props;\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const removeWorkflowFn = useCallback(ev => { removeWorkflow(dispatch, index); ev.stopPropagation(); }, [dispatch, index]);\n    const updateWorkflowStateFn = useCallback(ev => { workflowStateUpdate(dispatch, index); ev.stopPropagation(); }, [dispatch, index]);\n    const editWorkflow = useCallback(redirectToWorkflow.bind(null, history, index), []);\n    return (\n        <div className=\"workflow-card\" onClick={editWorkflow}>\n            <div className=\"delete-icon\" onClick={removeWorkflowFn}>\n                <FaTrashAlt />\n            </div>\n            <div className=\"workflow-name\">{name}</div> \n            <div className=\"display-flex justify-space-between align-items-center\">\n                {state}\n                <span className={`state-icon ${state.toLowerCase()}`} onClick={updateWorkflowStateFn}><FaCheckCircle /></span>\n            </div>    \n        </div>\n    );\n}\n\nexport default WorkflowCard;","import React from 'react';\nimport WorkflowCard from './WorkflowCard';\nimport './WorkflowList.css';\n\nfunction WorkflowList(props) {\n    const { workflows } = props;\n    return (\n        <div className=\"workflow-list\">\n            {\n                workflows.map((workflow, index) => {\n                    return (\n                        <WorkflowCard key={index} workflow={workflow} index={index} />\n                    );\n                })\n            }\n        </div>\n    )\n}\n\nexport default WorkflowList;","import React, { useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { growlUpdate, clearWorkflowError } from '../../actions/index';\nimport WorkflowsListHeader from './WorkflowsListHeader';\nimport WorkflowList from './WorklowList';\nimport { useHistory } from 'react-router-dom';\n\nfunction updateGrowl(dispatch, type) {\n    if (type === 'update-error') {\n        dispatch(growlUpdate({ type: 'error', message: 'This workflow can not be updated as all the tasks are not done.', timeout: 4000 }));\n    } else if (type === 'delete-success') {\n        dispatch(growlUpdate({ type: 'success', message: 'The workflow has been deleted successfully.', timeout: 3000 }))\n    }\n    dispatch(clearWorkflowError());\n}\n\nfunction Workflows() {\n    const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n    const history = useHistory();\n    if (!isLoggedIn) {\n        history.push('/');\n    }\n    const dispatch = useDispatch();\n    const updateGrowlFn = useCallback(updateGrowl.bind(null, dispatch), []);\n    const workflowState = useSelector(state => state.workflow);\n    const { persistedWorkflows, updateStateErr, workflowRemoved, workflowAdded, searchQuery, filterState } = workflowState;\n    useEffect(() => {\n        if (updateStateErr) {\n            updateGrowlFn('update-error');\n        } else if (workflowRemoved) {\n            updateGrowlFn('delete-success');\n        } else if (workflowAdded) {\n            // history.push(`/workflows/${persistedWorkflows.length - 1}`);\n            dispatch(clearWorkflowError());\n        }\n    }, [workflowAdded, workflowRemoved, updateStateErr, updateGrowlFn, history, persistedWorkflows, dispatch]);\n    const renderWorkflows = searchQuery || filterState ? persistedWorkflows.filter(workflow => workflow.name.toLowerCase().indexOf(searchQuery) > -1 && (filterState ? workflow.state === filterState : true)) : persistedWorkflows;\n    return (\n        <div>\n            <WorkflowsListHeader />\n            {renderWorkflows.length > 0 ? <WorkflowList workflows={renderWorkflows} /> : <span className=\"pd-l20\">No Workflows...</span>}\n        </div>\n    );\n}\n\nexport default Workflows;","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { FaPlus, FaTimes, FaRandom } from \"react-icons/fa\";\nimport { addNode, deleteNode, updateWorkflows, shuffleNodes } from '../../actions/index';\n\nfunction addNewNode(dispatch, index) {\n    dispatch(addNode(index))\n}\n\nfunction deleteLastNode(dispatch, index) {\n    dispatch(deleteNode(index));\n}\n\nfunction saveWorkflow(dispatch) {\n    dispatch(updateWorkflows());\n}\n\nfunction shuffleWfNodes(dispatch, index) {\n    dispatch(shuffleNodes(index));\n}\n\nfunction WorkflowActions(props) {\n    const { index, nodesCount, allowShuffle } = props;\n    const dispatch = useDispatch();\n    const addNodeFn = useCallback(addNewNode.bind(null, dispatch, index), []);\n    const deleteNodeFn = useCallback(deleteLastNode.bind(null, dispatch, index), []);\n    const saveWorkflowFn = useCallback(saveWorkflow.bind(null, dispatch), [dispatch]);\n    const shuffleWfNodesFn = useCallback(shuffleWfNodes.bind(null, dispatch, index), [dispatch, index]);\n    return (\n        <div className=\"workflow-actions display-flex align-items-center\">\n            {allowShuffle && <button className=\"shuffle display-flex align-items-center\" onClick={shuffleWfNodesFn}><FaRandom /><span className=\"pd-l4\">Shuffle</span></button>}\n            {nodesCount > 0 && <button className=\"delete-node display-flex align-items-center\" onClick={deleteNodeFn}><FaTimes /><span className=\"pd-l4\">Delete</span></button>}\n            <button className=\"add-node display-flex align-items-center\" onClick={addNodeFn}><FaPlus /><span className=\"pd-l4\">Add Node</span></button>\n            <button className=\"save display-flex align-items-center\" onClick={saveWorkflowFn}><span className=\"pd-l4\">Save</span></button>\n        </div>\n    );\n}\n\nexport default WorkflowActions;","import React, { useCallback } from 'react';\nimport WorkflowActions from './WorkflowActions';\nimport { updateWorkflow } from '../../actions/index';\nimport './WorkflowHeader.css';\nimport { useDispatch } from 'react-redux';\n\nfunction updateWfName(dispatch, index, name) {\n    dispatch(updateWorkflow(index, { name }));\n}\n\nfunction WorkflowHeader(props) {\n    const { index, workflow: { name, nodes, state } } = props;\n    const allowShuffle = state === 'COMPLETED' && nodes.length > 1;\n    const dispatch = useDispatch();\n    const updateWfNameFn = useCallback(ev => { updateWfName(dispatch, index, ev.target.value); }, [dispatch, index]);\n    return (\n        <div className=\"workflow-header\">\n            <input className=\"workflow-name-text\" type=\"text\" defaultValue={name} onBlur={updateWfNameFn} />\n            <WorkflowActions index={index} nodesCount={nodes.length} allowShuffle={allowShuffle} />\n        </div>\n    );\n}\n\nexport default WorkflowHeader;","import React, { useCallback } from 'react';\nimport { FaCheckCircle } from \"react-icons/fa\";\nimport './WorkflowNode.css';\nimport { useDispatch } from 'react-redux';\nimport { updateState, updateNode } from '../../actions/index';\nimport { noop } from '../../utils';\n\nfunction changeState(dispatch, workflowIndex, nodeIndex) {\n    dispatch(updateState(workflowIndex, nodeIndex));\n}\n\nfunction updateNodeData(dispatch, workflowIndex, nodeIndex, ev) {\n    const el = ev.target;\n    const type = el.dataset.key;\n    const data = {};\n    data[type] = el.textContent;\n    dispatch(updateNode(workflowIndex, nodeIndex, data));\n}\n\nfunction WorkflowNode(props) {\n    const { workflowIndex, nodeIndex, node: { title, content, state } } = props;\n    const dispatch = useDispatch();\n    const changeStateFn = useCallback(changeState.bind(null, dispatch, workflowIndex, nodeIndex), [dispatch, nodeIndex, workflowIndex]);\n    const updateNodeFn = useCallback(ev => updateNodeData(dispatch, workflowIndex, nodeIndex, ev), [dispatch, nodeIndex, workflowIndex]);\n    return (\n        <div className=\"workflow-node\">\n            <div className={`node-state-icon ${state.toLowerCase()}${state !== 'COMPLETED' ? ' cursor-pointer' : ''}`} onClick={state !== 'COMPLETED' ? changeStateFn : noop}><FaCheckCircle /></div>\n            <div className=\"title\" data-key=\"title\" contentEditable onBlur={updateNodeFn}>{title}</div>\n            <div className=\"content\" data-key=\"content\" contentEditable onBlur={updateNodeFn}>{content}</div>\n        </div>\n    ); \n}\n\nexport default WorkflowNode;","import React from 'react';\nimport WorkflowNode from './WorkflowNode';\nimport './NodesList.css';\n\nfunction NodesList(props) {\n    const { workflowIndex, workflow: { nodes } } = props;\n    return (\n        <div className=\"nodes-list display-flex\">\n            {\n                nodes.map((node, index) => {\n                    return (\n                        <WorkflowNode key={index} node={node} workflowIndex={workflowIndex} nodeIndex={index} />\n                    );\n                })\n            }\n        </div>\n    );\n}\n\nexport default NodesList;","import React, { useEffect, useCallback } from 'react';\nimport WorkflowHeader from './WorkflowHeader';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { growlUpdate, clearWorkflowError, updateWorkflows } from '../../actions/index';\nimport NodesList from './NodesList';\n\nfunction updateGrowl(dispatch, type) {\n    if (type === 'update-error') {\n        dispatch(growlUpdate({ type: 'error', message: 'This task can not be completed as the previous tasks are not done.', timeout: 5000 }));\n    } else if (type === 'delete-success') {\n        dispatch(growlUpdate({ type: 'success', message: 'The last task of this workflow has been deleted successfully.', timeout: 4000 }))\n    } else if (type === 'saved-success') {\n        dispatch(growlUpdate({ type: 'success', message: 'The workflow has been saved successfully.', timeout: 3000 }))\n    }\n    dispatch(clearWorkflowError());\n}\n\nfunction Workflow(props) {\n    const { match } = props;\n    const workflowIndex = Number(match.params.index);\n    const dispatch = useDispatch();\n    const updateGrowlFn = useCallback(updateGrowl.bind(null, dispatch), []);\n    const workflowState = useSelector(state => state.workflow);\n    const { workflows, updateStateErr, nodeRemoved, saved } = workflowState;\n    const workflow = workflows[workflowIndex];\n    useEffect(() => {\n        dispatch(updateWorkflows('fromPersist'));\n    }, [dispatch]);\n    useEffect(() => {\n        if (updateStateErr) {\n            updateGrowlFn('update-error');\n        } else if (nodeRemoved) {\n            updateGrowlFn('delete-success');\n        } else if (saved) {\n            updateGrowlFn('saved-success');    \n        }\n    }, [saved, nodeRemoved, updateStateErr, updateGrowlFn]);\n    if (!workflow) return null;\n    return (\n        <div className=\"workflow\">\n            <WorkflowHeader workflow={workflow} index={workflowIndex} />\n            <NodesList workflow={workflow} workflowIndex={workflowIndex} />\n        </div>\n    );\n}\n\nexport default Workflow;","import React, { useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { growlUpdate } from '../../actions/index';\nimport './Growl.css';\n\nfunction updateGrowl(dispatch) {\n    dispatch(growlUpdate(null));\n}\n\nfunction Growl() {\n    const growlData = useSelector(state => state.message.data);\n    const { message, type, timeout } = growlData || {};\n    const dispatch = useDispatch();\n    const updateGrowlFn = useCallback(updateGrowl.bind(null, dispatch), []);\n    useEffect(() => {\n        setTimeout(updateGrowlFn, timeout);\n    }, [updateGrowlFn, timeout]);\n    if (message) {\n        return (\n            <div className={`growl growl-${type}`}>\n                {message}\n            </div>\n        );\n    } else {\n        return null;\n    }\n}\n\nexport default Growl;","\nimport React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Header from './Components/Header/Header';\nimport Login from './Components/Auth/Login';\nimport Workflows from './Components/Workflow/Workflows';\nimport Workflow from './Components/Workflow/Workflow';\nimport './App.css';\nimport './Common.css';\nimport Growl from './Components/Messages/Growl';\n\nfunction App() {\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <div className=\"app-container\">\n                <Header />\n                <Switch>\n                    <Route exact path=\"/\" component={props => <Login {...props} />} />\n                    <Route exact path=\"/workflows\" component={props => <Workflows {...props} />} />\n                    <Route exact path=\"/workflows/:index\" component={props => <Workflow {...props} />} />\n                </Switch>\n                <Growl />\n            </div>\n        </BrowserRouter>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\n\nimport App from './App';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('.container')\n);","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducers from './reducers';\nimport mySaga from './sagas';\n\nexport default function createStoreWithMiddleware() {\n  // Define middlewares to include\n  const sagaMiddleware = createSagaMiddleware();\n  // Add all middlewares into an array\n  const middleware = [sagaMiddleware];\n\n  // Add the Redux dev tools and middleware code together\n  const enhancers = compose(\n    applyMiddleware(...middleware)\n  );\n\n  // Create a store with the reducers and middleware\n  const store = createStore(reducers, enhancers);\n\n  // Run the Redux Saga middleware listeners\n  sagaMiddleware.run(mySaga);\n\n  return store;\n}"],"sourceRoot":""}