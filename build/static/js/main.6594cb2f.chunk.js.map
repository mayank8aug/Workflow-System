{"version":3,"sources":["reducers/auth.js","reducers/workflowHeader.js","reducers/workflow.js","reducers/index.js","sagas/index.js","actions/index.js","Components/Header/Header.js","Components/Auth/Login.js","Components/Workflow/Search.js","utils.js","Components/Workflow/WorkflowsListHeader.js","Components/Workflow/GlobalHeader.js","Components/Workflow/WorkflowCard.js","Components/Workflow/WorklowList.js","Components/Workflow/Workflows.js","App.js","index.js","store.js"],"names":["initialState","isLoggedIn","email","auth","prevState","action","type","Object","assign","filterState","searchQuery","workflowHeader","query","workflows","workflow","concat","splice","index","combineReducers","rootSaga","all","types","userLogout","dispatch","history","replace","Header","useHistory","useDispatch","logout","useCallback","bind","useSelector","state","className","onClick","onSubmit","validate","Login","props","submitHandler","render","handleSubmit","name","input","meta","placeholder","touched","error","handleInput","func","wait","timeout","args","context","this","later","apply","clearTimeout","setTimeout","debounce","setSearchQuery","Search","onKeyUp","ev","target","value","createNewWorkflow","WorkflowsListHeader","createWorkflow","GlobalHeader","removeWorkflow","deleteWorkflow","WorkflowCard","removeWorkflowFn","toLowerCase","WorkflowList","map","key","Workflows","App","basename","process","exact","path","component","store","sagaMiddleware","createSagaMiddleware","middleware","enhancers","compose","applyMiddleware","createStore","reducers","run","mySaga","configureStore","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.6594cb2f.chunk.js","sourcesContent":["const initialState = {\n    isLoggedIn: false,\n    email: null\n};\n\nfunction auth(prevState = initialState, action) {\n    switch(action.type) {\n        case 'LOGIN_USER':\n            return Object.assign({}, prevState, {\n                isLoggedIn: true,\n                email: action.email\n            });\n        case 'LOGOUT_USER':\n            return Object.assign({}, prevState, {\n                isLoggedIn: false,\n                email: null\n            });\n        default:\n            return prevState;\n    }\n}\n\nexport default auth;","const initialState = {\n    filterState: null,\n    searchQuery: null\n};\n\nfunction workflowHeader(prevState = initialState, action) {\n    switch(action.type) {\n        case 'SET_SEARCH_QUERY':\n            return Object.assign({}, prevState, {\n                searchQuery: action.query\n            });\n        case 'SET_FILTER':\n            return Object.assign({}, prevState, {\n                filterState: action.filterState\n            });\n        default:\n            return prevState;\n    }\n}\n\nexport default workflowHeader;","const initialState = {\n    workflows: []\n};\n\nfunction workflow(prevState = initialState, action) {\n    switch(action.type) {\n        case 'ADD_WORKFLOW':\n            return Object.assign({}, prevState, {\n                workflows: prevState.workflows.concat(action.workflow)\n            });\n        case 'DELETE_WORKFLOW':\n            prevState.workflows.splice(action.index, 1);\n            return Object.assign({}, prevState, {\n                workflows: [...prevState.workflows]\n            });\n        default:\n            return prevState;\n    }\n}\n\nexport default workflow;","  \nimport { combineReducers } from 'redux';\nimport auth from './auth';\nimport workflowHeader from './workflowHeader';\nimport workflow from './workflow';\n\nexport default combineReducers({\n    auth,\n    workflowHeader,\n    workflow\n});","  \nimport { all } from 'redux-saga/effects';\n\nexport default function* rootSaga() {\n  yield all([\n  ]);\n}","export const types = {\n    LOGIN_USER: 'LOGIN_USER',\n    LOGOUT_USER: 'LOGOUT_USER',\n    SET_SEARCH_QUERY: 'SET_SEARCH_QUERY',\n    SET_FILTER: 'SET_FILTER',\n    ADD_WORKFLOW: 'ADD_WORKFLOW',\n    DELETE_WORKFLOW: 'DELETE_WORKFLOW'\n};\n\nexport function loginUser(email) {\n    return { type: types.LOGIN_USER, email };\n}\n\nexport function logoutUser() {\n    return { type: types.LOGOUT_USER };\n}\n\nexport function setSearchQuery(query) {\n    return { type: types.SET_SEARCH_QUERY, query };\n}\n\nexport function setFilter(filterState) {\n    return { type: types.SET_FILTER, filterState };\n}\n\nexport function addWorkflow() {\n    return { type: types.ADD_WORKFLOW, workflow: { name: 'New Workflow', state: 'PENDING' } };\n}\n\nexport function deleteWorkflow(index) {\n    return { type: types.DELETE_WORKFLOW, index };\n}","import React, { useCallback } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logoutUser } from '../../actions/index';\nimport './Header.css'\n\nfunction userLogout(dispatch, history) {\n    dispatch(logoutUser());\n    history.replace('/');\n}\n\nfunction Header() {\n    const history = useHistory();;\n    const dispatch = useDispatch();\n    const logout = useCallback(userLogout.bind(null, dispatch, history));\n    const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n    return (\n        <div className=\"header\">\n            <div className=\"fs20 fw700 color-white\">FLOWAPP</div>\n            {isLoggedIn && <button className=\"logout-btn\" onClick={logout}>Logout</button>}\n        </div>\n    );\n}\n\nexport default Header;","import React, { useCallback } from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch } from 'react-redux';\nimport { loginUser } from '../../actions/index';\nimport './Login.css';\n\nfunction onSubmit(history, dispatch) {\n    dispatch(loginUser('mk@yopmail.com'));\n    history.replace('/workflows');\n}\n\nfunction validate() {\n\n}\n\nfunction Login(props) {\n    const { history } = props;\n    const dispatch = useDispatch();\n    const submitHandler = useCallback(onSubmit.bind(null, history, dispatch), []);\n    return (\n        <div className=\"login-container display-flex flex-column justify-space-center align-items-center\">\n            <div className=\"login\">\n                <div className=\"mr-b20 fw700 text-center\">Login</div>\n                <Form\n                    onSubmit={submitHandler}\n                    validate={validate}\n                    render={({ handleSubmit }) => (\n                        <form onSubmit={handleSubmit}>\n                            <Field name=\"email\">\n                                {({ input, meta }) => (\n                                    <div className=\"mr-b20\">\n                                        <input className=\"input-field outline-none\" type=\"email\" {...input} placeholder=\"Email\" />\n                                        {meta.touched && meta.error && <span>{meta.error}</span>}\n                                    </div>\n                                )}\n                            </Field>\n                            <Field name=\"password\">\n                                {({ input, meta }) => (\n                                    <div className=\"mr-b20\">\n                                        <input className=\"input-field outline-none\" type=\"password\" {...input} placeholder=\"Password\" />\n                                        {meta.touched && meta.error && <span>{meta.error}</span>}\n                                    </div>\n                                )}\n                            </Field>\n                            <label className=\"mr-b20 inline-block cursor-pointer\">\n                                <Field name=\"rememberLogin\">\n                                    {({ input, meta }) => (\n                                        <span>\n                                            <input className=\"cursor-pointer\" type=\"checkbox\" {...input} />\n                                            {meta.touched && meta.error && <span>{meta.error}</span>}\n                                        </span>\n                                    )}\n                                </Field>\n                                <span className=\"pd-l4 fs14 text-top\">Remember me</span>\n                            </label>\n                            <button className=\"w100 color-white cursor-pointer submit-btn outline-none\" type=\"submit\">Login</button>\n                        </form>\n                    )}\n                />\n                <div className=\"signup-text cursor-pointer\">Don't have an account? Sign up here</div>\n            </div>\n        </div >\n    );\n}\n\nexport default Login;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setSearchQuery } from '../../actions/index';\nimport { debounce } from '../../utils';\n\nfunction handleSearchQuery(query, dispatch) {\n    dispatch(setSearchQuery(query));\n}\n\nconst handleInput = debounce(handleSearchQuery, 200);\n\nfunction Search() {\n    const dispatch = useDispatch();\n    return (\n        <div className=\"workflow-search\">\n            <input className=\"search\" type=\"text\" placeholder=\"Search Workflows\" onKeyUp={ev => handleInput(ev.target.value, dispatch)} />\n        </div>\n    );\n}\n\nexport default Search;","export function debounce(func, wait) {\n    let timeout;\n    return function (...args) {\n        const context = this;\n        const later = function () {\n            timeout = null;\n            func.apply(context, args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n}","import React, { useCallback } from 'react';\nimport { addWorkflow } from '../../actions/index';\nimport Search from './Search';\nimport { useDispatch } from 'react-redux';\n\nfunction createNewWorkflow(dispatch) {\n    dispatch(addWorkflow());\n}\n\nfunction WorkflowsListHeader() {\n    const dispatch = useDispatch();\n    const createWorkflow = useCallback(createNewWorkflow.bind(null, dispatch), []);\n    return (\n        <div>\n            <Search />\n            <button onClick={createWorkflow}>Create Workflow</button>\n        </div>\n    );\n}\n\nexport default WorkflowsListHeader;","import React from 'react';\nimport WorkflowsListHeader from './WorkflowsListHeader';\n\nfunction GlobalHeader() {\n    return (\n        <WorkflowsListHeader />\n    );\n}\n\nexport default GlobalHeader;","import React, { useCallback } from 'react';\nimport { FaTrashAlt, FaCheckCircle } from \"react-icons/fa\";\nimport { deleteWorkflow } from '../../actions/index';\nimport './WorkflowCard.css';\nimport { useDispatch } from 'react-redux';\n\nfunction removeWorkflow(dispatch, index) {\n    dispatch(deleteWorkflow(index));\n}\n\nfunction WorkflowCard(props) {\n    const { workflow: { name, state }, index } = props;\n    const dispatch = useDispatch();\n    const removeWorkflowFn = useCallback(removeWorkflow.bind(null, dispatch, index), []);\n    return (\n        <div className=\"workflow-card\">\n            <div className=\"delete-icon\" onClick={removeWorkflowFn}>\n                <FaTrashAlt />\n            </div>\n            <div className=\"workflow-name\">{name}</div> \n            <div className=\"display-flex justify-space-between align-item-center\">\n                {state}\n                <span className={`state-icon ${state.toLowerCase()}`}><FaCheckCircle /></span>\n            </div>    \n        </div>\n    );\n}\n\nexport default WorkflowCard;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport WorkflowCard from './WorkflowCard';\nimport './WorkflowList.css';\n\nfunction WorkflowList() {\n    const workflows = useSelector(state => state.workflow.workflows);\n    return (\n        <div className=\"workflow-list\">\n            {\n                workflows.map((workflow, index) => {\n                    return (\n                        <WorkflowCard key={index} workflow={workflow} index={index} />\n                    );\n                })\n            }\n        </div>\n    )\n}\n\nexport default WorkflowList;","import React from 'react';\nimport GlobalHeader from './GlobalHeader';\nimport WorkflowList from './WorklowList';\n\nfunction Workflows() {\n    return (\n        <div>\n            <GlobalHeader />\n            <WorkflowList />\n        </div>\n    );\n}\n\nexport default Workflows;","\nimport React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Header from './Components/Header/Header';\nimport Login from './Components/Auth/Login';\nimport Workflows from './Components/Workflow/Workflows'\nimport './App.css';\nimport './Common.css';\n\nfunction App() {\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <div className=\"app-container\">\n                <Header />\n                <Switch>\n                    <Route exact path=\"/\" component={props => <Login {...props} />} />\n                    <Route exact path=\"/workflows\" component={props => <Workflows {...props} />} />\n                </Switch>\n            </div>\n        </BrowserRouter>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\n\nimport App from './App';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('.container')\n);","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducers from './reducers';\nimport mySaga from './sagas';\n\nexport default function createStoreWithMiddleware() {\n  // Define middlewares to include\n  const sagaMiddleware = createSagaMiddleware();\n  // Add all middlewares into an array\n  const middleware = [sagaMiddleware];\n\n  // Add the Redux dev tools and middleware code together\n  const enhancers = compose(\n    applyMiddleware(...middleware)\n  );\n\n  // Create a store with the reducers and middleware\n  const store = createStore(reducers, enhancers);\n\n  // Run the Redux Saga middleware listeners\n  sagaMiddleware.run(mySaga);\n\n  return store;\n}"],"sourceRoot":""}